name: Package exe with PyInstaller - Windows

on:
  push:
    tags:
      - v*

jobs:
  createrelease:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      - name: Save Release URL File for publish
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt

  build:
    name: Build packages
    needs: createrelease
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            TARGET: macos
            CMD_BUILD: >
              pyinstaller --noconfirm --onedir --console --icon src/icons/icon.ico --name umdapy --debug noarchive --noupx --additional-hooks-dir src/hooks --hidden-import umdalib --paths src/ --target-architecture universal2 src/main.py
            ZIP_IT: cd dist && zip -r9 umdapy-darwin.zip umdapy/
            OUT_FILE_NAME: umdapy-darwin.zip
            ASSET_MIME: application/zip

          - os: windows-latest
            TARGET: windows
            CMD_BUILD: pyinstaller --noconfirm --onedir --console --icon src/icons/icon.ico --name umdapy --debug noarchive --noupx --additional-hooks-dir src/hooks --hidden-import umdalib --paths src/ src/main.py
            ZIP_IT: powershell Compress-Archive -Path dist/umdapy -DestinationPath dist/umdapy-win32.zip
            OUT_FILE_NAME: umdapy-win32.zip
            ASSET_MIME: application/zip

          # - os: ubuntu-latest
          #   TARGET: ubuntu
          #   CMD_BUILD: >
          #     pyinstaller --noconfirm --onedir --console --icon src/icons/icon.ico --name umdapy --debug noarchive --noupx --additional-hooks-dir src/hooks --hidden-import umdalib --paths src/ src/main.py
          #   ZIP_IT: cd dist && zip -r umdapy-linux.zip umdapy/
          #   OUT_FILE_NAME: umdapy-linux.zip
          #   ASSET_MIME: application/zip

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip" # caching pip dependencies

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt

      - name: List contents of src/icons
        run: ls src/icons

      - name: Build with pyinstaller for ${{matrix.TARGET}}
        run: ${{matrix.CMD_BUILD}}

      - name: Create ZIP
        run: ${{matrix.ZIP_IT}}

      - name: Load Release URL File from release job
        uses: actions/download-artifact@v1
        with:
          name: release_url

      - name: Get Release File Name & Upload URL
        id: get_release_info
        shell: bash
        run: |
          value=`cat release_url/release_url.txt`
          echo ::set-output name=upload_url::$value

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}

          asset_path: ./dist/${{ matrix.OUT_FILE_NAME}}
          asset_name: ${{ matrix.OUT_FILE_NAME}}
          asset_content_type: ${{ matrix.ASSET_MIME}}
